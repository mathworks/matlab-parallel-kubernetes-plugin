# Template for an independent MATLAB Parallel Server job
# Copyright 2022-2023 The MathWorks, Inc.

# Loop over tasks and create a Kubernetes job object for each
{{- range $index, $taskLoc := .Values.parallelServer.taskLocations }}
apiVersion: batch/v1
kind: Job

# Label with job and task UIDs to enable MATLAB jobs and tasks to be selected via kubectl
metadata:
  {{- $taskUID := (index $.Values.taskUIDs $index) | quote | lower }}
  name: {{ $taskUID }}
  labels:
    jobUID: {{ $.Values.jobUID }}
    taskUID: {{ $taskUID }}

# Pod specification
spec:
  # Don't restart the job if the container fails
  backoffLimit: 0

  template:
    metadata:
      name: independent-matlab-job-pod
      labels:
          jobUID: {{ $.Values.jobUID }}
          taskUID: {{ $taskUID }}
    spec:
      restartPolicy: Never

      # Independent worker pods do not need to run as root, so run as a specified user
      securityContext:
        runAsUser: {{ $.Values.parallelServer.userID }}
        runAsGroup: {{ $.Values.parallelServer.groupID }}

      containers:
      - name: independent-matlab-job
        image: {{ $.Values.image | quote }}
        imagePullPolicy: {{ $.Values.imagePullPolicy | quote }}
        args:
        - /scripts/independentJobWrapper.sh
        resources:
          requests:
            cpu: {{ $.Values.numThreads }}

        # Define volume names
        {{- $jobStorageVolume := "data-volume" }}
        {{- $matlabVolume := "matlab-volume" }}

        # Set the path at which to mount the job storage location
        {{- $containerJobStorageLocation := "/job_storage" }}

        # If using an image with MATLAB already installed, set the MATLAB root to /matlab
        # This must match the MATLAB install path on the Docker image
        {{- $containerMatlabRoot := "/matlab" }}

        # If mounting from a persistent volume, set the MATLAB root to the path under the mount
        {{- $containerMatlabMount := "/matlab" }}
        {{- $separateMatlabPVC := ne $.Values.matlabPVC $.Values.jobStoragePVC }}
        {{- if $.Values.matlabPVC }}
          {{- if $separateMatlabPVC }}
            {{- $containerMatlabRoot = printf "%s/%s" $containerMatlabMount $.Values.matlabPath }}
          {{- else }}
            # Job storage and MATLAB installation are in the same PVC, so get MATLAB root from job storage mount location
            {{- $containerMatlabRoot = printf "%s/%s" $containerJobStorageLocation $.Values.matlabPath }}
          {{- end }}
        {{- end }}

        # Mount the job storage location onto the container
        volumeMounts:
        - name: {{ $jobStorageVolume }}
          mountPath: {{ $containerJobStorageLocation }}

        # Optionally mount a MATLAB installation onto the container
        {{- if (and $.Values.matlabPVC $separateMatlabPVC) }}
        - name: {{ $matlabVolume }}
          mountPath: {{ $containerMatlabMount }}
          readOnly: true
        {{- end }}

        env:
        # Environment variables required for MATLAB Parallel Server Generic integration
        - name: PARALLEL_SERVER_DECODE_FUNCTION
          value: {{ $.Values.parallelServer.decodeFunction | quote }}
        - name: PARALLEL_SERVER_STORAGE_CONSTRUCTOR
          value: {{ $.Values.parallelServer.storageConstructor | quote }}
        - name: PARALLEL_SERVER_STORAGE_LOCATION
          value: {{ printf "%s/%s" $containerJobStorageLocation $.Values.jobStoragePath }}
        - name: PARALLEL_SERVER_JOB_LOCATION
          value: {{ $.Values.parallelServer.jobLocation | quote }}
        - name: PARALLEL_SERVER_TASK_LOCATION
          value: {{ $taskLoc | quote }}
        - name: PARALLEL_SERVER_MATLAB_ARGS
          value: {{ $.Values.parallelServer.matlabArgs | quote }}
        - name: PARALLEL_SERVER_USER_ID
          value: {{ $.Values.parallelServer.userID | quote }}
        - name: PARALLEL_SERVER_DEBUG
          value: {{ $.Values.parallelServer.debug | quote }}
        - name: PARALLEL_SERVER_USERNAME
          value: {{ $.Values.username }}

        # Path to the MATLAB installation to use
        - name: MATLAB_ROOT
          value: {{ $containerMatlabRoot }}

        # Path to logfile
        - name: LOGFILE
          value: {{ index $.Values.taskLogs $index }}

        # MATLAB licensing environment variables
        - name: MLM_LICENSE_FILE
          value: {{ $.Values.licenseServer | quote }}
        - name: MLM_WEB_LICENSE
          value: {{ $.Values.mlmWebLicense | quote }}
        - name: MLM_WEB_ID
          value: {{ $.Values.mlmWebID | quote }}
        - name: PARALLEL_SERVER_LICENSE_NUMBER
          value: {{ $.Values.licenseNumber | quote }}

        # If using online licensing, mount the user's MATLAB login token from a Kubernetes secret
        {{- if $.Values.userCredSecretName }}
        - name: MLM_WEB_USER_CRED
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.userCredSecretName }}
              key: {{ $.Values.userCredKeyName }}
        {{- end }}

      # Mount the job storage location from a persistent volume
      volumes:
      - name: {{ $jobStorageVolume }}
        persistentVolumeClaim:
          claimName: {{ $.Values.jobStoragePVC }}

      # Optionally mount a MATLAB installation from a persistent volume
      {{- if (and $.Values.matlabPVC $separateMatlabPVC) }}
      - name: {{ $matlabVolume }}
        persistentVolumeClaim:
          claimName: {{ $.Values.matlabPVC }}
      {{- end }}
---
{{- end }}
