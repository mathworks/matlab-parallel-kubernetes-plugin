# Copyright 2022-2023 The MathWorks, Inc.
{{- range $index, $taskLoc := .Values.parallelServer.taskLocations }}
apiVersion: batch/v1
kind: Job
metadata:
  {{- $taskUID := (index $.Values.taskUIDs $index) | quote | lower }}
  name: {{ $taskUID }}
  labels:
    jobUID: {{ $.Values.jobUID }}
    taskUID: {{ $taskUID }}
spec:
  backoffLimit: 0
  {{- if ($.Values.automaticJobCleanup | default true) }}
  ttlSecondsAfterFinished: {{ $.Values.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      name: independent-matlab-job-pod
      labels:
          jobUID: {{ $.Values.jobUID }}
          taskUID: {{ $taskUID }}
    spec:
      restartPolicy: Never
      securityContext:
        runAsUser: {{ $.Values.parallelServer.userID }}
        runAsGroup: {{ $.Values.parallelServer.groupID }}
      containers:
      - name: independent-matlab-job
        image: {{ $.Values.image | quote }}
        imagePullPolicy: {{ $.Values.imagePullPolicy | quote }}
        args:
        - /scripts/independentJobWrapper.sh
        resources:
          requests:
            cpu: {{ $.Values.numThreads }}

        {{- $containerJobStorageLocation := "/job_storage" }}
        {{- $containerMatlabMount := "/matlab" }}
        {{- $containerMatlabRoot := $containerMatlabMount }}
        {{- if $.Values.matlabPVC }}
        {{- $containerMatlabRoot = printf "%s/%s" $containerMatlabMount $.Values.matlabPath }}
        {{- end}}
        volumeMounts:
        - name: data-volume
          mountPath: {{ $containerJobStorageLocation }}
        {{- if $.Values.matlabPVC }}
        - name: matlab-volume
          mountPath: {{ $containerMatlabMount }}
          readOnly: true
        {{- end }}

        env:
        - name: PARALLEL_SERVER_DECODE_FUNCTION
          value: {{ $.Values.parallelServer.decodeFunction | quote }}
        - name: PARALLEL_SERVER_STORAGE_CONSTRUCTOR
          value: {{ $.Values.parallelServer.storageConstructor | quote }}
        - name: PARALLEL_SERVER_STORAGE_LOCATION
          value: {{ printf "%s/%s" $containerJobStorageLocation $.Values.jobStoragePath }}
        - name: PARALLEL_SERVER_JOB_LOCATION
          value: {{ $.Values.parallelServer.jobLocation | quote }}
        - name: PARALLEL_SERVER_TASK_LOCATION
          value: {{ $taskLoc | quote }}
        - name: PARALLEL_SERVER_MATLAB_ARGS
          value: {{ $.Values.parallelServer.matlabArgs | quote }}
        - name: PARALLEL_SERVER_USER_ID
          value: {{ $.Values.parallelServer.userID | quote }}
        - name: PARALLEL_SERVER_DEBUG
          value: {{ $.Values.parallelServer.debug | quote }}
        - name: PARALLEL_SERVER_USERNAME
          value: {{ $.Values.username }}
        - name: MATLAB_ROOT
          value: {{ $containerMatlabRoot }}
        - name: LOGFILE
          value: {{ index $.Values.taskLogs $index }}
        - name: MLM_LICENSE_FILE
          value: {{ $.Values.licenseServer | quote }}
        - name: MLM_WEB_LICENSE
          value: {{ $.Values.mlmWebLicense | quote }}
        - name: MLM_WEB_ID
          value: {{ $.Values.mlmWebID | quote }}
        - name: PARALLEL_SERVER_LICENSE_NUMBER
          value: {{ $.Values.licenseNumber | quote }}
        {{- if $.Values.userCredSecretName }}
        - name: MLM_WEB_USER_CRED
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.userCredSecretName }}
              key: {{ $.Values.userCredKeyName }}
        {{- end }}

      # Set locations of directories to be mounted onto the container
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ $.Values.jobStoragePVC }}

      {{- if $.Values.matlabPVC }}
      - name: matlab-volume
        persistentVolumeClaim:
          claimName: {{ $.Values.matlabPVC }}
      {{- end }}
---
{{- end }}
